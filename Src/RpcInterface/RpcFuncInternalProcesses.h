/*
 * Copyright 2023 ZF Friedrichshafen AG
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef RPCFUNCINTERNALPROCESSES_H
#define RPCFUNCINTERNALPROCESSES_H

#include <stdint.h>

#include "RpcFuncBase.h"

#ifdef _WIN32
#ifdef __GNUC__
#pragma ms_struct on
#endif
#endif
#pragma pack(push,1)

#define INTPROC_CMD_OFFSET  50

#define RPC_API_START_SCRIPT_CMD         (INTPROC_CMD_OFFSET+0)
typedef struct {
#define RPC_API_START_SCRIPT_MESSAGE_MEMBERS \
    RPC_API_BASE_MESSAGE Header;\
    int32_t OffsetScriptFile;\
    char Data[1];  // > 1Byte!
    RPC_API_START_SCRIPT_MESSAGE_MEMBERS
} RPC_API_START_SCRIPT_MESSAGE;

typedef struct {
#define RPC_API_START_SCRIPT_MESSAGE_ACK_MEMBERS \
    RPC_API_BASE_MESSAGE_ACK Header;
    RPC_API_START_SCRIPT_MESSAGE_ACK_MEMBERS
} RPC_API_START_SCRIPT_MESSAGE_ACK;

#define RPC_API_STOP_SCRIPT_CMD         (INTPROC_CMD_OFFSET+1)
typedef struct {
#define RPC_API_STOP_SCRIPT_MESSAGE_MEMBERS \
    RPC_API_BASE_MESSAGE Header;
    RPC_API_STOP_SCRIPT_MESSAGE_MEMBERS
} RPC_API_STOP_SCRIPT_MESSAGE;

typedef struct {
#define RPC_API_STOP_SCRIPT_MESSAGE_ACK_MEMBERS \
    RPC_API_BASE_MESSAGE_ACK Header;
    RPC_API_STOP_SCRIPT_MESSAGE_ACK_MEMBERS
} RPC_API_STOP_SCRIPT_MESSAGE_ACK;

#define RPC_API_START_RECORDER_CMD         (INTPROC_CMD_OFFSET+2)
typedef struct {
#define RPC_API_START_RECORDER_MESSAGE_MEMBERS \
    RPC_API_BASE_MESSAGE Header;\
    int32_t OffsetCfgFile;\
    char Data[1];  // > 1Byte!
    RPC_API_START_RECORDER_MESSAGE_MEMBERS
} RPC_API_START_RECORDER_MESSAGE;

typedef struct {
#define RPC_API_START_RECORDER_MESSAGE_ACK_MEMBERS \
    RPC_API_BASE_MESSAGE_ACK Header;
    RPC_API_START_RECORDER_MESSAGE_ACK_MEMBERS
} RPC_API_START_RECORDER_MESSAGE_ACK;

#define RPC_API_STOP_RECORDER_CMD         (INTPROC_CMD_OFFSET+3)
typedef struct {
#define RPC_API_STOP_RECORDER_MESSAGE_MEMBERS \
    RPC_API_BASE_MESSAGE Header;
    RPC_API_STOP_RECORDER_MESSAGE_MEMBERS
} RPC_API_STOP_RECORDER_MESSAGE;

typedef struct {
#define RPC_API_STOP_RECORDER_MESSAGE_ACK_MEMBERS \
    RPC_API_BASE_MESSAGE_ACK Header;
    RPC_API_STOP_RECORDER_MESSAGE_ACK_MEMBERS
} RPC_API_STOP_RECORDER_MESSAGE_ACK;

#define RPC_API_START_PLAYER_CMD         (INTPROC_CMD_OFFSET+4)
typedef struct {
#define RPC_API_START_PLAYER_MESSAGE_MEMBERS \
    RPC_API_BASE_MESSAGE Header;\
    int32_t OffsetCfgFile;\
    char Data[1];  // > 1Byte!
    RPC_API_START_PLAYER_MESSAGE_MEMBERS
} RPC_API_START_PLAYER_MESSAGE;

typedef struct {
#define RPC_API_START_PLAYER_MESSAGE_ACK_MEMBERS \
    RPC_API_BASE_MESSAGE_ACK Header;
    RPC_API_START_PLAYER_MESSAGE_ACK_MEMBERS
} RPC_API_START_PLAYER_MESSAGE_ACK;

#define RPC_API_STOP_PLAYER_CMD         (INTPROC_CMD_OFFSET+5)
typedef struct {
#define RPC_API_STOP_PLAYER_MESSAGE_MEMBERS \
    RPC_API_BASE_MESSAGE Header;
    RPC_API_STOP_PLAYER_MESSAGE_MEMBERS
} RPC_API_STOP_PLAYER_MESSAGE;

typedef struct {
#define RPC_API_STOP_PLAYER_MESSAGE_ACK_MEMBERS \
    RPC_API_BASE_MESSAGE_ACK Header;
    RPC_API_STOP_PLAYER_MESSAGE_ACK_MEMBERS
} RPC_API_STOP_PLAYER_MESSAGE_ACK;

#define RPC_API_START_EQUATIONS_CMD         (INTPROC_CMD_OFFSET+6)
typedef struct {
#define RPC_API_START_EQUATIONS_MESSAGE_MEMBERS \
    RPC_API_BASE_MESSAGE Header;\
    int32_t OffsetCfgFile;\
    char Data[1];  // > 1Byte!
    RPC_API_START_EQUATIONS_MESSAGE_MEMBERS
} RPC_API_START_EQUATIONS_MESSAGE;

typedef struct {
#define RPC_API_START_EQUATIONS_MESSAGE_ACK_MEMBERS \
    RPC_API_BASE_MESSAGE_ACK Header;
    RPC_API_START_EQUATIONS_MESSAGE_ACK_MEMBERS
} RPC_API_START_EQUATIONS_MESSAGE_ACK;

#define RPC_API_STOP_EQUATIONS_CMD         (INTPROC_CMD_OFFSET+7)
typedef struct {
#define RPC_API_STOP_EQUATIONS_MESSAGE_MEMBERS \
    RPC_API_BASE_MESSAGE Header;
    RPC_API_STOP_EQUATIONS_MESSAGE_MEMBERS
} RPC_API_STOP_EQUATIONS_MESSAGE;

typedef struct {
#define RPC_API_STOP_EQUATIONS_MESSAGE_ACK_MEMBERS \
    RPC_API_BASE_MESSAGE_ACK Header;
    RPC_API_STOP_EQUATIONS_MESSAGE_ACK_MEMBERS
} RPC_API_STOP_EQUATIONS_MESSAGE_ACK;

#define RPC_API_START_GENERATOR_CMD         (INTPROC_CMD_OFFSET+8)
typedef struct {
#define RPC_API_START_GENERATOR_MESSAGE_MEMBERS \
    RPC_API_BASE_MESSAGE Header;\
    int32_t OffsetCfgFile;\
    char Data[1];  // > 1Byte!
    RPC_API_START_GENERATOR_MESSAGE_MEMBERS
} RPC_API_START_GENERATOR_MESSAGE;

typedef struct {
#define RPC_API_START_GENERATOR_MESSAGE_ACK_MEMBERS \
    RPC_API_BASE_MESSAGE_ACK Header;
    RPC_API_START_GENERATOR_MESSAGE_ACK_MEMBERS
} RPC_API_START_GENERATOR_MESSAGE_ACK;

#define RPC_API_STOP_GENERATOR_CMD         (INTPROC_CMD_OFFSET+9)
typedef struct {
#define RPC_API_STOP_GENERATOR_MESSAGE_MEMBERS \
    RPC_API_BASE_MESSAGE Header;
    RPC_API_STOP_GENERATOR_MESSAGE_MEMBERS
} RPC_API_STOP_GENERATOR_MESSAGE;

typedef struct {
#define RPC_API_STOP_GENERATOR_MESSAGE_ACK_MEMBERS \
    RPC_API_BASE_MESSAGE_ACK Header;
    RPC_API_STOP_GENERATOR_MESSAGE_ACK_MEMBERS
} RPC_API_STOP_GENERATOR_MESSAGE_ACK;

#define RPC_API_RECORDER_ADD_COMMENT_CMD         (INTPROC_CMD_OFFSET+10)
typedef struct {
#define RPC_API_RECORDER_ADD_COMMENT_MESSAGE_MEMBERS \
    RPC_API_BASE_MESSAGE Header;\
        int32_t OffsetComment;\
        char Data[1];  // > 1Byte!
    RPC_API_RECORDER_ADD_COMMENT_MESSAGE_MEMBERS
} RPC_API_RECORDER_ADD_COMMENT_MESSAGE;

typedef struct {
#define RPC_API_RECORDER_ADD_COMMENT_MESSAGE_ACK_MEMBERS \
    RPC_API_BASE_MESSAGE_ACK Header;
    RPC_API_RECORDER_ADD_COMMENT_MESSAGE_ACK_MEMBERS
} RPC_API_RECORDER_ADD_COMMENT_MESSAGE_ACK;

#pragma pack(pop)
#ifdef _WIN32
#ifdef __GNUC__
#pragma ms_struct reset
#endif
#endif
int AddInternProcessFunctionToTable(void);


#endif // RPCFUNCINTERNALPROCESSES_H
